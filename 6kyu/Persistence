Task

Write a function, persistence, that takes in a positive parameter num and returns its multiplicative persistence, which is the number of times you must multiply the digits in num until you reach a single digit.

For example (Input --> Output):

39 --> 3 (because 3*9 = 27, 2*7 = 14, 1*4 = 4 and 4 has only one digit)
999 --> 4 (because 9*9*9 = 729, 7*2*9 = 126, 1*2*6 = 12, and finally 1*2 = 2)
4 --> 0 (because 4 is already a one-digit number)



Solution

def persistence(n):
    def function(nn, count=0):
        x = list(map(int, str(nn)))
        if len(x)==1:
            return count
        else:
            y=1
        for i in x:
            y *= i
        if y>9:
            return function(y, count+1)
        else:
            return count+1
    return function(n)
